# üöÄ Nginx config for Royal TV (Next.js + Socket.IO)
# Listen on port 80 (HTTP) and redirect all traffic to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name royal-tv.tv www.royal-tv.tv;
    # üîÄ Redirect all HTTP requests to HTTPS
    return 301 https://royal-tv.tv$request_uri;
}

# üîí HTTPS server block for royal-tv.tv
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name royal-tv.tv www.royal-tv.tv;

    # (Certbot will insert SSL certificate directives here after we obtain certs)
    ssl_certificate /etc/letsencrypt/live/royal-tv.tv/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/royal-tv.tv/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/royal-tv.tv/chain.pem; 
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # üñ•Ô∏è Proxy WebSocket traffic (Socket.IO) to backend (port 3001)
    location /socket.io/ {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        # WebSocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        # Pass to Socket.IO server
        proxy_pass http://localhost:3001/socket.io/;
    }
    # üì° Proxy HTTP API calls starting with /emit/ to the Socket server
    location /emit/ {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_pass http://localhost:3001$request_uri;
    }
    # üè† Proxy everything else to Next.js frontend (port 3000)
    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        # Allow WebSocket upgrades for Next (if any)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        # Pass to Next.js Node server
        proxy_pass http://localhost:3000;
    }

    # (Optional: increase client_max_body_size if needed for file uploads)
    client_max_body_size 50M;
}
