# ===================== royal-tv.tv (Nginx) =====================
# Upstreams
upstream royal_tv_frontend {                         # üöÄ Next.js (next start)
    server 127.0.0.1:3000;
    keepalive 64;
}
upstream royal_tv_backend {                          # üì° server.js (Socket.IO + /emit/*)
    server 127.0.0.1:3001;
    keepalive 64;
}

# WebSocket upgrade helper (define once per nginx.conf http{} or here)
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# -------- HTTP ‚Üí HTTPS redirect --------
server {
    listen 80;
    listen [::]:80;
    server_name royal-tv.tv www.royal-tv.tv;
    return 301 https://royal-tv.tv$request_uri;
}

# -------- Primary HTTPS server --------
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name royal-tv.tv www.royal-tv.tv;

    # üîê Let‚Äôs Encrypt certs
    ssl_certificate     /etc/letsencrypt/live/royal-tv.tv/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/royal-tv.tv/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;

    # (optional) basic security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;

    # -------- Socket.IO (WebSocket + long-poll) --------
    location /socket.io/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;         # WS upgrade
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_read_timeout 75s;
        proxy_send_timeout 75s;

        proxy_pass http://royal_tv_backend;
    }

    # -------- Emit bridge (HTTP) --------
    location /emit/ {
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_read_timeout 30s;
        proxy_send_timeout 30s;

        proxy_pass http://royal_tv_backend;
    }

    # Health check (optional, handy)
    location = /emit/health {
        proxy_pass http://royal_tv_backend/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
    }

    # -------- Everything else ‚Üí Next.js --------
    location / {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;         # keeps SSE/WS if used
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_read_timeout 75s;
        proxy_send_timeout 75s;

        proxy_pass http://royal_tv_frontend;
    }

    # -------- Cache immutable Next assets (fixed) --------
    location ^~ /_next/static/ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable" always;
        access_log off;

        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_pass http://royal_tv_frontend;
    }

    # (Optional) uploads/body size
    # client_max_body_size 10m;
}
